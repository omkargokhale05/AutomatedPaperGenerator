<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f03uRtO0fF2lAAAAAElFTkSuQmCC
</value>
  </data>
</root>